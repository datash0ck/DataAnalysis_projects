"""
Created on Thu Dec 29 13:12:52 2022

@author: Jen VanGalder
"""
""" Hairstyles Business Project """

# Import required libraries
import matplotlib.pyplot as plt


# Create data lists for types of hairstyles, prices, and previous week
hairstyles = ["bouffant", "pixie", "dreadlocks", "crew", "bowl", "bob", "mohawk", "flattop"]
prices = [30, 25, 40, 20, 20, 35, 50, 35]
last_week = [2, 3, 5, 8, 4, 4, 6, 2]

# Creating a For Loop to find total revenue for last week
total_revenue= 0
for i in range(len(hairstyles)):
  total_revenue += prices[i] * last_week[i]
  print("Total Revenue: " + str(total_revenue))

# Computing the average daily revenue
average_daily_revenue= total_revenue / 7
print(average_daily_revenue)

# Reduced prices by $5 for discounts to loyal customers
new_prices= [price - 5 for price in prices]
print(new_prices)

# Get list of cuts under $30 to advertise for marketing to draw new customers
cuts_under_30= [hairstyles[i] for i in range(len(hairstyles)) if new_prices[i] < 30]
print(cuts_under_30)

"""----------------------------------------------------------------------------"""

# Create a visual bar graph the original and new prices of hairstyles with discount
plt.figure(figsize=(10, 6))

# Original prices bar chart
plt.subplot(1, 2, 1)
plt.bar(hairstyles, prices, color='skyblue')
plt.title('Original Prices')
plt.xlabel('Hairstyles')
plt.ylabel('Price ($)')

# New prices bar chart
plt.subplot(1, 2, 2)
plt.bar(hairstyles, new_prices, color='lightgreen')
plt.title('New Prices')
plt.xlabel('Hairstyles')
plt.ylabel('Price ($)')

plt.tight_layout()
plt.show()

# Create a visual of the revenue generated by each hairstyle
revenue_per_hairstyle = [prices[i] * last_week[i] for i in range(len(hairstyles))]

plt.figure(figsize=(10, 6))
plt.bar(hairstyles, revenue_per_hairstyle, color='coral')
plt.title('Revenue per Hairstyle')
plt.xlabel('Hairstyles')
plt.ylabel('Revenue ($)')
plt.show()

# Create a visual of the number of cuts for each hairstyle last week
plt.figure(figsize=(10, 6))
plt.bar(hairstyles, last_week, color='orchid')
plt.title('Number of Cuts Last Week')
plt.xlabel('Hairstyles')
plt.ylabel('Number of Cuts')
plt.show()

# Create a combined bar and line chart to understand the relationship between number of cuts and revenue generated by each hairstyle
fig, ax1 = plt.subplots(figsize=(12, 6))

# Bar chart for the number of cuts
color = 'tab:blue'
ax1.set_xlabel('Hairstyles')
ax1.set_ylabel('Number of Cuts', color=color)
ax1.bar(hairstyles, last_week, color=color, alpha=0.6, label='Number of Cuts')
ax1.tick_params(axis='y', labelcolor=color)

# Line chart for the revenue
ax2 = ax1.twinx()
color = 'tab:red'
ax2.set_ylabel('Revenue ($)', color=color)
ax2.plot(hairstyles, revenue_per_hairstyle, color=color, marker='o', label='Revenue')
ax2.tick_params(axis='y', labelcolor=color)

# Adding titles and legend
plt.title('Number of Cuts vs Revenue per Hairstyle')
fig.tight_layout()
fig.legend(loc='upper left', bbox_to_anchor=(0.1, 0.9))

plt.show()

"""------------------------------------------------------------------------------------"""
# Creating a combined bar and line graph to visualize the difference in revenue if we increase the crew cut by $5

# New prices with crew cut increased to $25
new_prices = prices[:]
new_prices[3] = 25  # Crew cut price changed from $20 to $25

# Calculate new revenue per hairstyle
new_revenue_per_hairstyle = [new_prices[i] * last_week[i] for i in range(len(hairstyles))]

# Create a combined bar and line chart 
fig, ax1 = plt.subplots(figsize=(12, 6))

# Bar chart for the number of cuts
color = 'tab:blue'
ax1.set_xlabel('Hairstyles')
ax1.set_ylabel('Number of Cuts', color=color)
ax1.bar(hairstyles, last_week, color=color, alpha=0.6, label='Number of Cuts')
ax1.tick_params(axis='y', labelcolor=color)

# Line chart for the original revenue
ax2 = ax1.twinx()
color = 'tab:red'
ax2.set_ylabel('Revenue ($)', color=color)
ax2.plot(hairstyles, revenue_per_hairstyle, color='tab:red', marker='o', label='Original Revenue')
ax2.plot(hairstyles, new_revenue_per_hairstyle, color='tab:green', marker='x', linestyle='--', label='New Revenue')
ax2.tick_params(axis='y', labelcolor=color)

# Adding titles and legend
plt.title('Number of Cuts vs Revenue per Hairstyle (Original vs New Crew Cut Price)')
fig.tight_layout()
fig.legend(loc='upper left', bbox_to_anchor=(0.1, 0.9))

# Annotate insights
for i in range(len(hairstyles)):
    ax1.annotate(last_week[i], (hairstyles[i], last_week[i] + 0.5), ha='center')
    ax2.annotate(revenue_per_hairstyle[i], (hairstyles[i], revenue_per_hairstyle[i] + 5), ha='center', color='red')
    ax2.annotate(new_revenue_per_hairstyle[i], (hairstyles[i], new_revenue_per_hairstyle[i] + 5), ha='center', color='green')

plt.show()

"""--------------------------------------------------------------------------------------------"""

# Trend Anlaysis / Conclusion
"""Based on this analysis we can see that the crew cut is under $30 on the hairstyles list and that it had the most number of cuts 
last week but not the highest revenue generated last week. I created a visual to represent and calculate what the revenue would be
if the price was increased by $5 for the crew cut. THe visual comparison provides a strong basis for potentially increasing the price
of the crew cut in order to optimize revenue.

We can also see that the higest revenue generated last week was from mohawks and was the second highest number of cuts. 
This could indicated that it might be beneficial to run a promotion as for this type of cut in order to draw in new customers. 
An additional report can be ran after successful completion of the marketing ad in order to analyze ROI. """




 
